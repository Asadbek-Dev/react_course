[{"F:\\react-course\\src\\index.js":"1","F:\\react-course\\src\\App.js":"2","F:\\react-course\\src\\user.js":"3","F:\\react-course\\src\\containers\\Navbar\\nav.js":"4","F:\\react-course\\src\\form.jsx":"5","F:\\react-course\\src\\component\\Posts.jsx":"6","F:\\react-course\\src\\containers\\index.jsx":"7","F:\\react-course\\src\\component\\paginate.js":"8","F:\\react-course\\src\\component\\Qator.jsx":"9","F:\\react-course\\src\\component\\Like.jsx":"10","F:\\react-course\\src\\component\\Dislike.jsx":"11","F:\\react-course\\src\\component\\Delete.jsx":"12","F:\\react-course\\src\\component\\Paginition.jsx":"13","F:\\react-course\\src\\db\\fakeGenres.jsx":"14","F:\\react-course\\src\\db\\fakeMovies.jsx":"15","F:\\react-course\\src\\Genres\\index.jsx":"16"},{"size":217,"mtime":1610356633540,"results":"17","hashOfConfig":"18"},{"size":1284,"mtime":1628413258793,"results":"19","hashOfConfig":"18"},{"size":1974,"mtime":1628407996237,"results":"20","hashOfConfig":"18"},{"size":1354,"mtime":1610723506303,"results":"21","hashOfConfig":"18"},{"size":4641,"mtime":1611590042445,"results":"22","hashOfConfig":"18"},{"size":966,"mtime":1611566569851,"results":"23","hashOfConfig":"18"},{"size":5032,"mtime":1611761164021,"results":"24","hashOfConfig":"18"},{"size":187,"mtime":1610374511313,"results":"25","hashOfConfig":"18"},{"size":269,"mtime":1608544014232,"results":"26","hashOfConfig":"18"},{"size":184,"mtime":1608546466722,"results":"27","hashOfConfig":"18"},{"size":251,"mtime":1608546464783,"results":"28","hashOfConfig":"18"},{"size":264,"mtime":1608366137278,"results":"29","hashOfConfig":"18"},{"size":1012,"mtime":1610558742867,"results":"30","hashOfConfig":"18"},{"size":268,"mtime":1610291360881,"results":"31","hashOfConfig":"18"},{"size":1201,"mtime":1610704029859,"results":"32","hashOfConfig":"18"},{"size":794,"mtime":1611510328275,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1gvrx7c",{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"36"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"F:\\react-course\\src\\index.js",[],["74","75"],"F:\\react-course\\src\\App.js",["76"],"F:\\react-course\\src\\user.js",["77","78","79"],"import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { AiOutlineArrowDown, AiOutlineArrowUp } from 'react-icons/ai'\r\nimport _ from 'lodash'\r\n\r\nexport default class User extends Component {\r\n    state = {\r\n        users: [],\r\n        posts: [],\r\n        elementId: '',\r\n        sortType: 'asc'\r\n    }\r\n\r\n    // sortHandler = () => {\r\n    //     const { sortType } = this.state;\r\n    //     const value = (sortType === 'asc') ? 'desc' : 'asc';\r\n    //     this.setState({ sortType: value })\r\n    // }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then(users => this.setState({ users }))\r\n        fetch('https://jsonplaceholder.typicode.com/posts')\r\n            .then(response => response.json())\r\n            .then(posts => this.setState({ posts }))\r\n\r\n    }\r\n    render() {\r\n        const { users, posts, elementId, sortType } = this.state;\r\n        const updated = _.orderBy(users, ['name'], sortType)\r\n        console.log(updated)\r\n        return (\r\n            <table style={{ width: '100vw' }}>\r\n                <thead>\r\n                    <th onClick={this.sortHandler}>name{sortType === 'asc' ? <AiOutlineArrowDown /> : <AiOutlineArrowUp />}</th>\r\n                    <th>email</th>\r\n                    <th>address</th>\r\n                </thead>\r\n                <tbody>\r\n                    {updated.map((item, index) =>\r\n                        <tr key={index} >\r\n                            <td onClick={() => this.props.history.push(`/posts/${item.id}`)} style={{ border: '1px solid #eee' }}>{item.name}</td>\r\n                            <td style={{ border: '1px solid #eee' }}>{item.email}</td>\r\n                            <td style={{ border: '1px solid #eee' }}>{item.address.city}</td>\r\n\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </table >\r\n        )\r\n    }\r\n}\r\n","F:\\react-course\\src\\containers\\Navbar\\nav.js",[],"F:\\react-course\\src\\form.jsx",["80","81","82"],"import React, { Component } from 'react'\r\nimport './movies.css'\r\nimport { FiUser } from \"react-icons/fi\";\r\nimport { AiOutlinePhone, AiOutlineMail } from \"react-icons/ai\";\r\nimport { RiLockPasswordLine } from \"react-icons/ri\";\r\nimport { Link } from 'react-router-dom';\r\nexport default class Form extends Component {\r\n    state = {\r\n        data: {\r\n            name: '',\r\n            phone: '',\r\n            email: '',\r\n            password: ''\r\n        },\r\n        isValid: 'valid'\r\n    };\r\n    inputHandler = e => {\r\n        console.log(e.target.value)\r\n        const { value, name } = e.target;\r\n        this.setState((prevState) => ({ ...prevState, data: { ...prevState.data, [name]: value } }))\r\n\r\n    }\r\n    submitHandler = e => {\r\n        e.preventDefault();\r\n        console.log(this.state.data)\r\n    }\r\n    changeDirect = () => {\r\n        const { name, phone, email, password } = this.state.data;\r\n\r\n        this.props.history.push(\"/movies\")\r\n        this.setState()\r\n        { !name && !phone && this.setState({ isValid: \"notValid\" }) }\r\n    }\r\n    render() {\r\n        console.log(this.state)\r\n        const { name, phone, email, password } = this.state.data;\r\n        const { isValid } = this.state;\r\n        return (\r\n            <div className=\"form\">\r\n\r\n                <form action=\"\" onSubmit={this.submitHandler}>\r\n                    <h3>Sign up</h3>\r\n                    <div className=\"inputs\">\r\n                        <label htmlFor=\"\">\r\n                            name{<span style={{ visibility: \"hidden\" }}>sdsfasfdfeggeeve</span>}{!name && isValid === 'notValid' && <span style={{ color: \"red\" }} >Please enter name</span>}\r\n                        </label>\r\n                        <div className=\"logo-input\">\r\n                            <div className=\"icon\">\r\n                                <FiUser />\r\n                            </div>\r\n                            <input\r\n                                onChange={this.inputHandler}\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                defaultValue={this.state.data.name}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"inputs\">\r\n                        <label htmlFor=\"\">\r\n                            phone{<span style={{ visibility: \"hidden\" }}>sdsfasfdfeggeee</span>}{!phone && isValid === 'notValid' && <span style={{ color: \"red\" }} >Please enter phone</span>}\r\n                        </label>\r\n                        <div className=\"logo-input\">\r\n                            <div className=\"icon\">\r\n                                <AiOutlinePhone />\r\n                            </div>\r\n                            <input onChange={this.inputHandler} type=\"tel\" name=\"phone\" defaultValue={this.state.data.phone} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"inputs\">\r\n                        <label htmlFor=\"\">\r\n                            email{<span style={{ visibility: \"hidden\" }}>sdsfasfdfeggeevc</span>}{!email && isValid === 'notValid' && <span style={{ color: \"red\" }} >Please enter email</span>}\r\n                        </label>\r\n                        <div className=\"logo-input\">\r\n                            <div className=\"icon\">\r\n                                <AiOutlineMail />\r\n                            </div>\r\n                            <input onChange={this.inputHandler} type=\"email\" name=\"email\" defaultValue={this.state.data.email} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"inputs\">\r\n                        <label htmlFor=\"\">\r\n                            password{<span style={{ visibility: \"hidden\" }}>sdsfdsaececc</span>}{!password && isValid === 'notValid' && <span style={{ color: \"red\" }} >Please enter password</span>}\r\n                        </label>\r\n                        <div className=\"logo-input\">\r\n                            <div className=\"icon\">\r\n                                <RiLockPasswordLine />\r\n                            </div>\r\n                            <input onChange={this.inputHandler} type=\"password\" name=\"password\" defaultValue={this.state.data.password} />\r\n                        </div>\r\n                    </div>\r\n                    {!name ? <button onClick={this.changeDirect} id=\"button\" type=\"button\">Send</button> : <button id=\"button\">Send</button>}\r\n                    <p>Do you have an account? <Link to=\"/signin\">Signin now</Link></p>\r\n                </form>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n","F:\\react-course\\src\\component\\Posts.jsx",["83","84"],"import React, { Component } from 'react'\r\nexport default class Posts extends Component {\r\n    state = {\r\n        posts: [],\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/posts')\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                const posts = res.filter(m => m.userId == this.props.match.params.id)\r\n                this.setState({ posts })\r\n            })\r\n    }\r\n    render() {\r\n        const { id, posts } = this.state;\r\n        return (\r\n            <div>\r\n                <tbody>\r\n                    {posts.map((item, index) =>\r\n                        <tr key={index} >\r\n                            <td>{item.id}</td>\r\n                            <td style={{ backgroundColor: '#f9f9f9', width: '98vw', border: '1px solid #eee' }}>{item.title}</td>\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","F:\\react-course\\src\\containers\\index.jsx",["85","86"],"import React, { Component } from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport '../style.css'\r\nimport { AiOutlineArrowDown, AiOutlineArrowUp } from 'react-icons/ai'\r\nimport Qator from '../component/Qator'\r\nimport Like from '../component/Like'\r\nimport Dislike from '../component/Dislike'\r\nimport Delete from '../component/Delete'\r\nimport moviesDb from '../db/fakeMovies'\r\nimport fakeGenres from '../db/fakeGenres'\r\nimport { Col, Row } from 'react-bootstrap'\r\nimport Index from '../Genres'\r\nimport Paginition from '../component/Paginition'\r\nimport paginate from '../component/paginate';\r\nimport _ from 'lodash'\r\n\r\n\r\n\r\nlet updated = [];\r\n\r\nexport default class Movie_list extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            movies: [],\r\n            genres: [],\r\n            pageSize: 3,\r\n            genre: 'all',\r\n            currentPage: 1,\r\n            sort: {\r\n                name: '',\r\n                type: 'asc'\r\n            }\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.setState({ movies: moviesDb, genres: fakeGenres });\r\n    }\r\n\r\n    likeHandler = (item) => {\r\n        const movies = [...this.state.movies]\r\n        const index = movies.indexOf(item)\r\n        movies[index] = { ...movies[index], like: !movies[index].like }\r\n        this.setState({ movies });\r\n    };\r\n    deleteHandler = (id) => {\r\n        const result = this.state.movies.filter(item => item.id !== id)\r\n        this.setState({ movies: result });\r\n    };\r\n\r\n    onTakeCurrentPage = (currentPage) => {\r\n        this.setState({ currentPage })\r\n    }\r\n\r\n    genreHandler = genre => {\r\n        const movies = moviesDb;\r\n        const res = movies.filter(m => m.genre === genre)\r\n        res.length ? this.setState({ genre, movies: res, currentPage: 1 }) : this.setState({ genre, movies: moviesDb })\r\n\r\n    }\r\n    sortHandler = (name) => {\r\n        const { movies, sort } = this.state;\r\n        let foo = '';\r\n        if (sort.name === name) {\r\n            foo = sort.type === 'asc' ? 'desc' : 'asc'\r\n        } else {\r\n            foo = 'desc';\r\n        }\r\n        this.setState((prevState) => ({ ...prevState, sort: { ...prevState.sort, name: name, type: foo } }));\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const { movies, genres, pageSize, currentPage, genre, sort } = this.state;\r\n        let sorted = paginate(movies, currentPage, pageSize);\r\n        updated = _.orderBy(sorted, sort.name, sort.type)\r\n        const count = movies.length;\r\n        console.log(this.state)\r\n\r\n        return (<div>\r\n            < h4 > Showing {updated.length} movies in the database.</h4 >\r\n            {updated.length === 0 ? <h1>No movies</h1> :\r\n                <Row>\r\n                    <Col>\r\n                        <Index genre={genre} onGenreChange={this.genreHandler} data={genres} />\r\n                    </Col>\r\n                    <Col>\r\n                        <table>\r\n                            <tr>\r\n                                <th onClick={() => this.sortHandler(\"title\")}>Title {this.state.sort.type === 'asc' ? <AiOutlineArrowUp /> : <AiOutlineArrowDown />}</th>\r\n                                <th onClick={() => this.sortHandler(\"genre\")}>Genre {this.state.sort.type === 'asc' ? <AiOutlineArrowUp /> : <AiOutlineArrowDown />}</th>\r\n                                <th onClick={() => this.sortHandler(\"stock\")}>Stock{this.state.sort.type === 'asc' ? <AiOutlineArrowUp /> : <AiOutlineArrowDown />}</th>\r\n                                <th onClick={() => this.sortHandler(\"rate\")}>Rate{this.state.sort.type === 'asc' ? <AiOutlineArrowUp /> : <AiOutlineArrowDown />}</th>\r\n                                <th></th>\r\n                                <th></th>\r\n                            </tr>\r\n                            {updated.map((item, index) => (\r\n                                <tr key={index}>\r\n                                    <td>{item.title}</td>\r\n                                    <td>{item.genre}</td>\r\n                                    <td>{item.stock}</td>\r\n                                    <td>{item.rate}</td>\r\n                                    <td>\r\n                                        <div onClick={() => { this.likeHandler(item) }}>\r\n                                            {item.like ? <Like /> : <Dislike />}\r\n                                        </div>\r\n                                    </td>\r\n                                    <td>\r\n                                        <div onClick={() => { this.deleteHandler(item.id) }}>\r\n                                            <Delete />\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </table>\r\n                        <Paginition pageSize={pageSize} currentPage={currentPage} count={count} onTakeCurrentPage={this.onTakeCurrentPage} />\r\n                    </Col>\r\n                </Row>}\r\n        </div>\r\n        )\r\n    }\r\n}","F:\\react-course\\src\\component\\paginate.js",["87"],"import _ from 'lodash';\r\nexport default function (data, pageNumber, pageSize) {\r\n    const index = (pageNumber - 1) * pageSize;\r\n    return _(data).slice(index).take(pageSize).value();\r\n}","F:\\react-course\\src\\component\\Qator.jsx",[],"F:\\react-course\\src\\component\\Like.jsx",[],"F:\\react-course\\src\\component\\Dislike.jsx",[],"F:\\react-course\\src\\component\\Delete.jsx",[],"F:\\react-course\\src\\component\\Paginition.jsx",[],"F:\\react-course\\src\\db\\fakeGenres.jsx",["88"],"export default [\r\n    {\r\n        id: 1,\r\n        isActive: false,\r\n        title: 'Action',\r\n    },\r\n    {\r\n        id: 2,\r\n        isActive: true,\r\n        title: 'Thriller',\r\n    },\r\n    {\r\n        id: 3,\r\n        isActive: false,\r\n        title: 'Comedy',\r\n    }\r\n]","F:\\react-course\\src\\db\\fakeMovies.jsx",["89"],"export default [\r\n    {\r\n        id: 1,\r\n        title: 'Terminator',\r\n        genre: 'Action',\r\n        stock: 6,\r\n        rate: 2.5,\r\n        like: true\r\n    },\r\n    {\r\n        id: 2,\r\n        title: 'Die Hard',\r\n        genre: 'Action',\r\n        stock: 5,\r\n        rate: 2.5,\r\n        like: false\r\n    },\r\n    {\r\n        id: 3,\r\n        title: 'Get Out',\r\n        genre: 'Thriller',\r\n        stock: 8,\r\n        rate: 3.5,\r\n        like: false\r\n\r\n    },\r\n    {\r\n        id: 4,\r\n        title: 'Trip to Italy',\r\n        genre: 'Comedy',\r\n        stock: 7,\r\n        rate: 3.5,\r\n        like: false\r\n\r\n    },\r\n    {\r\n        id: 5,\r\n        title: 'Airplane',\r\n        genre: 'Comedy',\r\n        stock: 7,\r\n        rate: 3.5,\r\n        like: false\r\n    },\r\n    {\r\n        id: 6,\r\n        title: 'Jhony English',\r\n        genre: 'Comedy',\r\n        stock: 90,\r\n        rate: 5,\r\n        like: false\r\n    },\r\n    {\r\n        id: 7,\r\n        title: 'Single girl',\r\n        genre: 'Triller',\r\n        stock: 40,\r\n        rate: 4.5,\r\n        like: false\r\n    },\r\n    {\r\n        id: 8,\r\n        title: 'Single boy',\r\n        genre: 'Comedy',\r\n        stock: 40,\r\n        rate: 4.5,\r\n        like: false\r\n    }\r\n]","F:\\react-course\\src\\Genres\\index.jsx",[],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":39,"column":17,"nodeType":"96","endLine":39,"endColumn":31},{"ruleId":"97","severity":1,"message":"98","line":2,"column":10,"nodeType":"99","messageId":"100","endLine":2,"endColumn":14},{"ruleId":"97","severity":1,"message":"101","line":30,"column":24,"nodeType":"99","messageId":"100","endLine":30,"endColumn":29},{"ruleId":"97","severity":1,"message":"102","line":30,"column":31,"nodeType":"99","messageId":"100","endLine":30,"endColumn":40},{"ruleId":"97","severity":1,"message":"103","line":28,"column":30,"nodeType":"99","messageId":"100","endLine":28,"endColumn":35},{"ruleId":"97","severity":1,"message":"104","line":28,"column":37,"nodeType":"99","messageId":"100","endLine":28,"endColumn":45},{"ruleId":"105","severity":1,"message":"106","line":32,"column":9,"nodeType":"107","messageId":"108","endLine":32,"endColumn":70},{"ruleId":"109","severity":1,"message":"110","line":12,"column":56,"nodeType":"111","messageId":"112","endLine":12,"endColumn":58},{"ruleId":"97","severity":1,"message":"113","line":17,"column":17,"nodeType":"99","messageId":"100","endLine":17,"endColumn":19},{"ruleId":"97","severity":1,"message":"114","line":5,"column":8,"nodeType":"99","messageId":"100","endLine":5,"endColumn":13},{"ruleId":"97","severity":1,"message":"115","line":62,"column":17,"nodeType":"99","messageId":"100","endLine":62,"endColumn":23},{"ruleId":"116","severity":1,"message":"117","line":2,"column":1,"nodeType":"118","endLine":5,"endColumn":2},{"ruleId":"116","severity":1,"message":"119","line":1,"column":1,"nodeType":"118","endLine":17,"endColumn":2},{"ruleId":"116","severity":1,"message":"119","line":1,"column":1,"nodeType":"118","endLine":68,"endColumn":2},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"react/jsx-pascal-case","Imported JSX component Movie_list must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'posts' is assigned a value but never used.","'elementId' is assigned a value but never used.","'email' is assigned a value but never used.","'password' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'id' is assigned a value but never used.","'Qator' is defined but never used.","'movies' is assigned a value but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","Assign array to a variable before exporting as module default","no-global-assign","no-unsafe-negation"]